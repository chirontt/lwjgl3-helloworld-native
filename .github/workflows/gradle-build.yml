name: Gradle native image build

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }} with Java ${{ matrix.java-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        java-version: [11, 17]
        graalvm-version: ['22.3.3']
        graalvm-distribution: ['graalvm-community']
      fail-fast: false

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up GraalVM ${{ matrix.graalvm-distribution }} for Java ${{ matrix.java-version }}
        if: matrix.java-version == 17
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.java-version }}
          distribution: ${{ matrix.graalvm-distribution }}
          components: 'native-image'

      - name: Set up GraalVM ${{ matrix.graalvm-version }} for Java ${{ matrix.java-version }}
        if: matrix.java-version == 11
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.java-version }}
          version: ${{ matrix.graalvm-version }}
          components: 'native-image'

      - name: Report Java version
        run: |
          java -version
          javac -version

      - name: Build with Gradle Wrapper (Linux and MacOS)
        run: ./gradlew --no-daemon --info nativeCompile
        if: runner.os != 'Windows'

      - name: Build with Gradle Wrapper (Windows)
        run: .\gradlew.bat --no-daemon --info nativeCompile
        if: runner.os == 'Windows'

